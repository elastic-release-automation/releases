---
name: run-release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read

# Avoid concurrency so we can watch the releases correctly
concurrency:
  group: ${{ github.workflow }}
  
jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      minor-matrix: ${{ steps.matrix.outputs.minor }}
      patch-matrix: ${{ steps.matrix.outputs.patch }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - id: matrix
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs')
            let minor, patch
            try {
              minor = fs.readFileSync('minor', 'utf-8')
              patch = fs.readFileSync('patch', 'utf-8')
            } catch (err) {
              core.setFailed(`Error loading 'minor' or 'patch' files: ${err}`)
              return
            }
            const minorMatrix= []
            const patchMatrix = []

            minor.split(/\r?\n/).forEach(line => { if (line !== '') { minorMatrix.push(`${line}`) } })
            patch.split(/\r?\n/).forEach(line => { if (line !== '') { patchMatrix.push(`${line}`) } })

            core.setOutput('minor', minorMatrix)
            core.setOutput('patch', patchMatrix)
            console.log(minorMatrix)
            console.log(patchMatrix)

  orchestrate-minor-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, '.0')
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.prepare.outputs.minor-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/workflows/run
        with:
          vault-url: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
          project: ${{ matrix.project }}
          release-type: 'minor'

  orchestrate-patch-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && !endsWith(github.ref, '.0')
    needs: prepare
    strategy:
      fail-fast: false
      matrix:
        project: ${{ fromJson(needs.prepare.outputs.patch-matrix) }}
    steps:
      - uses: actions/checkout@v4
      - run: echo "### minor - ${GITHUB_REF#refs/*/}" >> $GITHUB_STEP_SUMMARY
      - uses: ./.github/workflows/run
        with:
          vault-url: ${{ secrets.VAULT_ADDR }}
          vault-role-id: ${{ secrets.VAULT_ROLE_ID }}
          vault-secret-id: ${{ secrets.VAULT_SECRET_ID }}
          project: ${{ matrix.project }}
          release-type: 'patch'
