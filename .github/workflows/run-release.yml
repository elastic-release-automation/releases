---
name: run-release

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

permissions:
  contents: read
  
jobs:
  orchestrate-minor-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && endsWith(github.ref, '.0')
    strategy:
      fail-fast: false
      matrix:
        project: [apm-server, observability-dev, observability-docs]
    steps:
      - name: Configure github token
        uses: elastic/apm-pipeline-library/.github/actions/github-token@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - name: Configure git user
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
        with:
          username: ${{ env.GIT_USER }}
          email: ${{ env.GIT_EMAIL }}
          token: ${{ env.GITHUB_TOKEN }}
      - run: |-
          gh workflow run \
            run-minor-release \
            --field "version=${GITHUB_REF#refs/*/}" \
            --repo "${REPO}" 
        env:
          REPO: 'elastic-release-automation/${{ matrix.project }}'
          GH_TOKEN: ${{ env.GITHUB_TOKEN }}

  orchestrate-patch-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && !endsWith(github.ref, '.0')
    strategy:
      fail-fast: false
      matrix:
        project: [apm-server]
    steps:
      - name: Configure github token
        uses: elastic/apm-pipeline-library/.github/actions/github-token@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - name: Configure git user
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
        with:
          username: ${{ env.GIT_USER }}
          email: ${{ env.GIT_EMAIL }}
          token: ${{ env.GITHUB_TOKEN }}
      - run: |-
          gh workflow run \
            run-patch-release \
            --field "version=${GITHUB_REF#refs/*/}" \
            --repo "${REPO}" 
        env:
          REPO: 'elastic-release-automation/${{ matrix.project }}'
          GH_TOKEN: ${{ env.GITHUB_TOKEN }}
