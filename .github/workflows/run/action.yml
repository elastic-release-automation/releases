
---
name: run

inputs:
  project:
    description: 'What project to be called'
    required: true
  release-type:
    description: 'release type'
    required: true
  vault-url:
    description: 'Vault URL'
    required: true
  vault-role-id:
    description: 'Vault role ID'
    required: true
  vault-secret-id:
    description: 'Vault secret ID'
    required: true
runs:
  using: "composite"
  steps:
    - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
      with:
        url: ${{ inputs.vault-url }}
        roleId: ${{ inputs.vault-role-id }}
        secretId: ${{ inputs.vault-secret-id }}

    - uses: elastic/apm-pipeline-library/.github/actions/setup-git@current
      with:
        username: ${{ env.GIT_USER }}
        email: ${{ env.GIT_EMAIL }}
        token: ${{ env.GITHUB_TOKEN }}

    - name: trigger workflow in ${{ inputs.project }}
      shell: bash
      run: |-
        gh workflow run run-${{ inputs.release-type}}-release \
          --field "version=${GITHUB_REF#refs/*/}" \
          --repo "${REPO}"
      env:
        REPO: 'elastic-release-automation/${{ inputs.project }}'

    - name: wait for workflow completion
      shell: bash
      run: |-
        set +e
        sleep 5
        gh run list --workflow=run-${{ inputs.release-type}}-release --repo "${REPO}" --limit 1 || true
        gh run \
            watch \
            --repo "${REPO}" $(gh run list --workflow=run-${{ inputs.release-type}}-release --repo "${REPO}" --limit 1 --json workflowDatabaseId --jq '.[].workflowDatabaseId')
      env:
        REPO: 'elastic-release-automation/${{ inputs.project }}'
