---
name: "onboarding (issue)"

on:
  issues:
    types:
      - edited
      - opened

permissions:
  contents: read
  issues: write

# Avoid running if there is already an on-going action running for the same
# GitHub issue
concurrency:
  group: "${{ github.workflow }}-${{ github.event.issue.number }}"

env:
  RUN_URL: "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
  OWNER: elastic-release-automation
jobs:
  create:
    if: contains(github.event.issue.labels.*.name, 'onboarding-automation')
    runs-on: ubuntu-latest
    steps:
      - name: Notify - started
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'I am your ü§ñ who is creating your automation. ([logs](${{ env.RUN_URL }}))'
            })

      - uses: actions/checkout@v4

      - name: Setup Git
        uses: elastic/apm-pipeline-library/.github/actions/setup-git@current

      - uses: stefanbuck/github-issue-parser@v3
        id: issue-parser
        with:
          template-path: .github/ISSUE_TEMPLATE/onboarding-issue.yml

      - uses: elastic/apm-pipeline-library/.github/actions/github-token@current
        with:
          url: ${{ secrets.VAULT_ADDR }}
          roleId: ${{ secrets.VAULT_ROLE_ID }}
          secretId: ${{ secrets.VAULT_SECRET_ID }}

      - id: is_write
        name: Check if user has got write access in the GitHub repository
        run: |
          IS_WRITE=$(gh api /repos/elastic-release-automation/${{ env.PROJECT }}/collaborators/${{ env.GIT_USER }}/permission --jq .user.permissions.push)
          echo "result=${IS_WRITE}" >> $GITHUB_OUTPUT
        env:
          PROJECT: ${{ steps.issue-parser.outputs.issueparser_project }}
          GH_TOKEN: ${{ env.GITHUB_TOKEN }}

      - if: contains(steps.is_write.outputs.result, 'true')
        run: make add-repo create-workflow link-created-github-issues
        env:
          AUTHOR: ${{ github.event.issue.user.login }}
          PROJECT: ${{ steps.issue-parser.outputs.issueparser_project }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
          GH_TOKEN: ${{ env.GITHUB_TOKEN }}
          GITHUB_TOKEN: ${{ env.GITHUB_TOKEN }}

      - name: Notify - success
        if: ${{ success() && contains(steps.is_write.outputs.result, 'true') }}
        uses: peter-evans/close-issue@276d7966e389d888f011539a86c8920025ea0626
        with:
          comment: "üíö Your project has been onboarded. The following GitHub Pull Requests have been created ${{ env.MANIFEST_ISSUE || '' }}  ${{ env.REPO_ISSUE || '' }} ${{ env.WORKFLOW_ISSUE || '' }}, please review them. ([logs](${{ env.RUN_URL }}))"
          labels: 'onboarding-done'

      - name: Notify - failed
        if: ${{ failure() }}
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: 'üíî Something went wrong. @elastic/observablt-robots, can you please help? ([logs](${{ env.RUN_URL }}))'
            })

      - name: Notify - is not admin
        if: contains(steps.is_write.outputs.result, 'false')
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
                issue_number: context.issue.number,
                owner: context.repo.owner,
                repo: context.repo.repo,
                body: '‚ùó Your GitHub repository is not configured with the right permissions, please grant admin access to ${{ env.GIT_USER }} and edit this Issue to try again ([logs](${{ env.RUN_URL }}))'
            })